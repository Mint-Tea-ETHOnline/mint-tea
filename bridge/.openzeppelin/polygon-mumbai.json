{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x2815dCC54A765e03041c7ba201AbBaFe04dCd1db",
    "txHash": "0xe5a1fa095c52129e8a070675314d105f5dd5707b8209e6a7875411632b458ce3"
  },
  "proxies": [
    {
      "address": "0x36610db20cA8bB5890Fb01dc0E16A441d45852B6",
      "txHash": "0x1cd404e17dd3dbbf0a1d34965b5b86953aa0b3b729c311721be1d3f39e93d125",
      "kind": "transparent"
    },
    {
      "address": "0xb1D0d0BCDF46aBFeB96CCf883a0D48257A869F9f",
      "txHash": "0x94528e8276abea699a7a4be2957539b5edefae4ad190c3d11d8fd8d9b43c506d",
      "kind": "transparent"
    },
    {
      "address": "0x9Ee3700Bc3cB94d1Aa8f1f5df207A766A5941b54",
      "txHash": "0x6d7c467a804930154b1f2fdd325fba65b3cb703dcb6600bc03426499024376f5",
      "kind": "transparent"
    },
    {
      "address": "0x4951600ba7a633Ac0773719202F241E7B0A05B39",
      "txHash": "0x6d43fb05aacb29763335f707e3b48ca975abeb45b55bc260145e1be9c64d62aa",
      "kind": "transparent"
    }
  ],
  "impls": {
    "0e0d22b648f346b6f32ec56afe3dec793f7294d852755482d216e6092c0cf115": {
      "address": "0x4C16568d75E67FBc6b312102a34389117D61d220",
      "txHash": "0x295a094b133979b3a0ef2401eb3916915e2f0d5eb38c2c076423c52efdd7cac9",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)522_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "getBridgeNFTInfo",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_struct(BridgeNFTInfo)6554_storage)",
            "contract": "NFTBridge",
            "src": "contracts/NFT/NFTBridge.sol:40"
          },
          {
            "label": "getNativeInfo",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_address,t_struct(NativeNFTInfo)6565_storage)",
            "contract": "NFTBridge",
            "src": "contracts/NFT/NFTBridge.sol:43"
          },
          {
            "label": "getChainInfo",
            "offset": 0,
            "slot": "253",
            "type": "t_mapping(t_uint256,t_struct(ChainInfo)6547_storage)",
            "contract": "NFTBridge",
            "src": "contracts/NFT/NFTBridge.sol:46"
          },
          {
            "label": "deBridgeGate",
            "offset": 0,
            "slot": "254",
            "type": "t_contract(IDeBridgeGateExtended)398",
            "contract": "NFTBridge",
            "src": "contracts/NFT/NFTBridge.sol:49"
          },
          {
            "label": "deBridgeNFTDeployer",
            "offset": 0,
            "slot": "255",
            "type": "t_contract(DeBridgeNFTDeployer)4716",
            "contract": "NFTBridge",
            "src": "contracts/NFT/NFTBridge.sol:52"
          },
          {
            "label": "nonce",
            "offset": 0,
            "slot": "256",
            "type": "t_uint256",
            "contract": "NFTBridge",
            "src": "contracts/NFT/NFTBridge.sol:55"
          },
          {
            "label": "createdTokens",
            "offset": 0,
            "slot": "257",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NFTBridge",
            "src": "contracts/NFT/NFTBridge.sol:58"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(DeBridgeNFTDeployer)4716": {
            "label": "contract DeBridgeNFTDeployer",
            "numberOfBytes": "20"
          },
          "t_contract(IDeBridgeGateExtended)398": {
            "label": "contract IDeBridgeGateExtended",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(NativeNFTInfo)6565_storage)": {
            "label": "mapping(address => struct INFTBridge.NativeNFTInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(BridgeNFTInfo)6554_storage)": {
            "label": "mapping(bytes32 => struct INFTBridge.BridgeNFTInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)522_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ChainInfo)6547_storage)": {
            "label": "mapping(uint256 => struct INFTBridge.ChainInfo)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(BridgeNFTInfo)6554_storage": {
            "label": "struct INFTBridge.BridgeNFTInfo",
            "members": [
              {
                "label": "nativeChainId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tokenAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "exist",
                "type": "t_bool",
                "offset": 20,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(ChainInfo)6547_storage": {
            "label": "struct INFTBridge.ChainInfo",
            "members": [
              {
                "label": "isSupported",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "nftBridgeAddress",
                "type": "t_bytes_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(NativeNFTInfo)6565_storage": {
            "label": "struct INFTBridge.NativeNFTInfo",
            "members": [
              {
                "label": "chainId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tokenAddress",
                "type": "t_bytes_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "tokenType",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(RoleData)522_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "b1b62d10e1058d0d89453ab38e7960e7e5a3664b9e4d7b3c149ddb44343df911": {
      "address": "0xe12d784d42aE102B8A2135c7e90b5DA58e249F6C",
      "txHash": "0x28b02aaac62a83045419afa55f2eeb2be948d3d98509992df842ea77249b0e4a",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_nonces",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721WithPermitUpgradable",
            "src": "contracts/NFT/ERC721WithPermitUpgradable.sol:20"
          },
          {
            "label": "_domainSeparator",
            "offset": 0,
            "slot": "152",
            "type": "t_bytes32",
            "contract": "ERC721WithPermitUpgradable",
            "src": "contracts/NFT/ERC721WithPermitUpgradable.sol:23"
          },
          {
            "label": "_domainChainId",
            "offset": 0,
            "slot": "153",
            "type": "t_uint256",
            "contract": "ERC721WithPermitUpgradable",
            "src": "contracts/NFT/ERC721WithPermitUpgradable.sol:24"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "154",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC721WithPermitUpgradable",
            "src": "contracts/NFT/ERC721WithPermitUpgradable.sol:196"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "DeNFT",
            "src": "contracts/NFT/DeNFT.sol:13"
          },
          {
            "label": "_baseURIValue",
            "offset": 0,
            "slot": "202",
            "type": "t_string_storage",
            "contract": "DeNFT",
            "src": "contracts/NFT/DeNFT.sol:15"
          },
          {
            "label": "minter",
            "offset": 0,
            "slot": "203",
            "type": "t_address",
            "contract": "DeNFT",
            "src": "contracts/NFT/DeNFT.sol:17"
          },
          {
            "label": "deNFTBridge",
            "offset": 0,
            "slot": "204",
            "type": "t_address",
            "contract": "DeNFT",
            "src": "contracts/NFT/DeNFT.sol:18"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "de55fcf95665851ec13aa45f7eb92f33e6e351cfeb8f8aeee8ec92d9a8b04c19": {
      "address": "0x714E9F0695ceaEAC42B4A1DA2479ff7c7b6F4E93",
      "txHash": "0x8b8b10a017b8569e8ff3c71b5ac040c4392fa29d428cc08ab774be5f17372352",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)522_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "beacon",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "DeBridgeNFTDeployer",
            "src": "contracts/NFT/DeBridgeNFTDeployer.sol:14"
          },
          {
            "label": "nftBridgeAddress",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "DeBridgeNFTDeployer",
            "src": "contracts/NFT/DeBridgeNFTDeployer.sol:17"
          },
          {
            "label": "deployedAssetAddresses",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_bytes32,t_address)",
            "contract": "DeBridgeNFTDeployer",
            "src": "contracts/NFT/DeBridgeNFTDeployer.sol:21"
          },
          {
            "label": "nonce",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "DeBridgeNFTDeployer",
            "src": "contracts/NFT/DeBridgeNFTDeployer.sol:24"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)522_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)522_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
